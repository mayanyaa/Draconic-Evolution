
buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name = "OpenComputers"
        url = "http://maven.cil.li/"
    }
    // ivy {
    //        name = 'ComputerCraft'
    //        artifactPattern  "http://addons-origin.forgecdn.com/files/2269/339/[module][revision](.[ext])"
    // }
}

apply plugin: 'forge'

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}"
group = "com.brandon3055.draconicevolution"
archivesBaseName = "Draconic-Evolution"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = "run"
}



dependencies {
    compile "codechicken:CodeChickenLib:${config.minecraft_version}-${config.CCLIB_version}:dev"
    compile "codechicken:CodeChickenCore:${config.minecraft_version}-${config.ccc_version}:dev"
    compile "codechicken:NotEnoughItems:${config.minecraft_version}-${config.NEI_version}:dev"
    compile 'li.cil.oc:OpenComputers:MC1.7.10-1.5.+:api'
    //compile "ComputerCraft:ComputerCraft:1.75:dev"
    if (file('../BrandonsCore/').exists()) compile project('../BrandonsCore')
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

apply plugin: 'idea'
idea {
    module {
        inheritOutputDirs = true
    }
}

task deobfJar(type: Jar) { // Generate deobfuscated
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourceJar(type: Jar) { // Generate sources
    from sourceSets.main.allSource
    classifier = 'sources'
}

tasks.build.dependsOn('sourceJar', 'deobfJar')

artifacts {
   archives deobfJar
   archives sourceJar
   archives jar
}